[
  {
    "url": "Linux-SSH.md",
    "markdown": "# SSH Linux\n\n`/etc/ssh/sshd_config` plik konfiguracyjny\n\n## Logowanie do ssh z innego komputera\n```bash\nssh nazwa_uzytkownika@adres_ip_serwera\n\n# Przyklad\nssh Administrator@192.168.0.1\n```\n\n## Logowanie do ssh z zmienionym portem\n```bash\nssh nazwa_uzytkownika@adres_ip_serwera -p numer_portu\n\n# Przyklad\nssh Administrator@192.168.0.1 -p 8080\n```\n\n## Restartowanie ssh\n```bash\nsudo systemctl restart ssh\nsudo systemctl status ssh\n```\n\n![image](/images/systemctl_status_ssh.png)\n\nPatrzycie tylko czy wyświetla active (running) na zielono jeśli tak to działa nie patrzycie na nic innego.\n\n## Zmiana portu ssh\nOtwieramy plik konfiguracyjny\n```bash\nsudo nano /etc/ssh/sshd_config\n```\n\nSzukamy linijki `#Port 22`, usuwamy `#` i w miejscu 22 wpisujemy port ktory kazano nam ustawic\n```bash\n#Port 22\n#AddressFamily any\n#ListenAddress 0.0.0.0\n#ListenAddress ::\n```\n\nPrzyklad:\n```bash\nPort 8080\n#AddressFamily any\n#ListenAddress 0.0.0.0\n#ListenAddress ::\n```\n\nNa samym koncu [restartujemy](#restartowanie-ssh) i sprawdzamy czy nam wszystko dziala. \nW tym momencie mozemy sprobowac [zalogowac sie z zmienionym portem](#logowanie-do-ssh-z-zmienionym-portem).\n\n## Logowanie do ssh jako root\n\nTworzymy haslo dla roota `sudo passwd root`\n\nOtwieramy plik konfiguracyjny `sudo nano /etc/ssh/sshd_config`\n\nSzukamy takiej linijki\n\n![image](/images/sshd_config_find_permitrootlogin.png)\n\nPrzy `PermitRootLogin` usuwamy `#` i w miejsce `prohibit-password` wpisujemy `yes`\n\n![image](/images/sshd_config_permirootlogin_yes.png)\n\nNa samym koncu [restartujemy](#restartowanie-ssh) i sprawdzamy czy nam wszystko dziala.\nW tym momencie mozemy sprobowac [zalogowac sie](#logowanie-do-ssh-z-innego-komputera) na konto `root`.\n\n## Blokowanie i zezwalanie na logowanie\nOtwieramy plik konfiguracyjny `sudo nano /etc/ssh/sshd_config` i dodajemy/modifikujemy\n\n`AllowUsers nazwa_uzytkownika1 nazwa_uzytkownika2 ...` zezwala tym uzytkownkom na zalogowanie do ssh\n\n`DenyUsers nazwa_uzytkownika1 nazwa_uzytkownika2 ...` blokuje tym uzytkownikom mozliwosc\nzalogowania do ssh\n\n`AllowGroups nazwa_grupy1 nazwa_grupy2 ...` zezwala uzytkownikom z tych grup na\nzalogowanie do ssh\n\n`DenyGroups nazwa_grupy1 nazwa_grupy2 ...` blokuje uzytkownikom z tych grup mozliwosc\nzalogowania do ssh\n\nNa samym koncu [restartujemy](#restartowanie-ssh) i sprawdzamy czy nam wszystko dziala. \n\n## Ustawianie maxymalnej ilosci prob wpisania hasla i maxymalnej ilosci sesji\nOtwieramy plik konfiguracyjny `sudo nano /etc/ssh/sshd_config`\n\nSzukamy i modifikujemy odpowiednie linijki (wiadomo usuwamy `#` jezeli sa przed opcja)\n\n![image](/images/sshd_config_find_permitrootlogin.png)\n\n`MaxAuthTries` maxymalna ilosc prob wpisania hasla (zmieniamy z 6 na ile chcemy)\n`MaxSessions` maxymalna ilosc sesji (zmieniamy z 10 na ile chcemy)\n\nNa samym koncu [restartujemy](#restartowanie-ssh) i sprawdzamy czy nam wszystko dziala. \n\n## Włączanie i wyłączanie uwierzytelniania hasłem\nOtwieramy plik konfiguracyjny `sudo nano /etc/ssh/sshd_config`\n\n![image](/images/sshd_config_password_auth.png)\n\nSzukamy `PasswordAuthentication` i usuwamy `#` jezeli on tam jest, jak chcemy wlaczyc autoryzajce haslem zostawiamy `yes` a jeśli\nchcemy wylaczyc to zmieniamy na `no`\n\n## Generowanie i Logowanie kluczem ssh\n**Robimy to na kliencie nie na serwerze**\n\n### Tworzenie klucza prywatnego i publicznego (taka sama komenda i na linuxie i\nna windowsie)\n\n```bash\nssh-keygen -t rsa\n```\n\n![image](/images/ssh_generate_key.png)\n\nPrzeysłamy klucz ssh na serwer. Scieżka do pliku z kluczem jest podana przy tworzeniu klucza\n\n```bash\nscp sciezka_do_pliku nazwa_urzytkownika_na_serwerze@adres_ip_serwera:/home/nazwa_urzytkownika_na_serwerze/.ssh\n\n# Przyklad\nscp /home/kwakwa/.ssh/id_rsa.pub Administrator@192.168.0.1:/home/Administrator/.ssh\n```\nDodajemy na zaraz po scp `–P nr_portu` jeśli mamy zmieniony port\n\nPotem na serwerze\n```bash\nsudo cat .ssh/id_rsa.pub >> .ssh/authorized_keys\n```\n\n(Nadal na serwerze) otwieramy plik `/etc/ssh/sshd_config` i szukamy `PubKeyAuthentication`, usuwamy `#` i ustawiamy wartosc na `yes` jezeli taka nie jest\n\nNa samym koncu [restartujemy](#restartowanie-ssh) i sprawdzamy czy nam wszystko dziala. \n"
  },
  {
    "url": "README.md",
    "markdown": "# Poradniki\n\n## Mikrotiki\n - [Instalacja maszyn VBox/VMWare](/mikrotik/Installation.md)\n - [QuickSet - WIFI/LAN/WAN](/mikrotik/QuickSet.md)\n - [Reczne ustawianie adresow](/mikrotik/Addressess.md)\n - [NAT](/mikrotik/NAT.md)\n\n## Linux (Autor: Wiktor)\n - [Ogolne informacje](/Linux.md)\n - [SSH](/Linux-SSH.md)\n"
  },
  {
    "url": "Linux.md",
    "markdown": "# PRZEŁĄCZNIKI DO KOMEND SZUKAMY WPISUJĄC MAN POLECENIE - WSZYSTKIE PRZELACZNIKI SA W MAN NIE TRZEBA ICH PAMIETAC\r\n\r\n## Pliki i Katalogi\r\n\r\n`cd` zmiana katalogu w którym jesteśmy\r\n\r\n`~` katalog domowy użytkownika na którym jesteśmy zalogowani `/home/nazwa_uzytkownika`\r\n\r\n`.` Aktualny katalog\r\n\r\n`..` katalog nadrzędny\r\n\r\n`/` katalog główny\r\n\r\n## Najważniejsze katalogi\r\n\r\n`/home` domyslne miejsce przechowywania katalogow domowych\r\n\r\n`/dev` miejsce plikow urzadzen\r\n\r\n`/etc` pliki konfigruacyjne\r\n\r\n## Komendy\r\n\r\n`mkdir nazwa` worzenie katalogow\r\n\r\n`rm nazwa` usuwanie katalogow i plikow\r\n\r\n`cp polozenie_pliku miejsce_docelowe` kopiowanie\r\n\r\n`mv nazwa_pliku miejsce_docelowe` przenoszenie plikow\r\n\r\n`mv nazwa nowa_nazwa` zmiana nazwy\r\n\r\n`ln nazwa_pliku miejsce_dowiazania` tworzenie dowiazania (domyslnie twarde dowiazanie, przelacznik `-s` aby bylo symboliczne) \r\n\r\n`ls` wysietlanie zawartosci katalogu \r\n\r\n`ls -l` ls z wiecej informacji\r\n\r\n`touch nazwa_pliku` tworzenie plikow\r\n\r\n`nano nazwapliku` edycja zawartosci pliku\r\n\r\n`chmod uprawnienia nazwapliku` ustalanie praw do pliku\r\n\r\nKolejnosc:\r\n\r\nWłaściciel pliku | Grupa pliku | Reszta\r\n\r\nUstalanie uprawnien \r\n| Odczyt | Zapis | Wykonanie |\r\n|--------|-------|-----------|\r\n| 4      | 2     | 1         |\r\n\r\nDodajemy liczby odpowiednie dla uprawnien jakie chcemy nadac np. Jak chcemy odczyt i wykonanie to 4 + 1 = 5  zapis odczyt 2 + 4 = 6\r\n\r\nI tak dla wlasciciela grupy i reszty\r\n\r\nNp.. Jak chcemy dla wlasciciela pelne prawa(odczyt zapis wykonanie) grupy odczyt i zapis a dla reszty odczyt to uzywamy komendy `chmod 764 nazwa`\r\n\r\n`chown nazwa_uzytkownika nazwa_pliku` zmiana wlasciciela pliku\r\n\r\n`chgrp nazwa_grupy nazwa_pliku` zmiana grupy pliku\r\n\r\n`chown nazwa_wlasciciela:nazwa_grupy nazwa_pliku` Zmiana wlasciciela i grupy na raz \r\n\r\n`chown nobody:nogroup nazwa_pliku` Ustawienie na brak wlasciciela i brak grupy\r\n\r\n## Pliki bash\r\n\r\nTworzymy plik z rozszerzeniem .sh, np: `Plik_wsadowy.sh`\r\n\r\n```bash\r\n#!/bin/bash\r\n\r\njakies\r\nkomendy\r\ntutaj\r\n```\r\n\r\n`echo cos_do_wyswietlenia` wyswietla cos do konsoli\r\n\r\n### Zmienne\r\n```bash\r\nX=\"jakas_zmienna\"\r\necho $X # wywolanie zmiennej\r\nread X # wprowadzanie wartosci z klawiatury do zmiennej X\r\n```\r\n\r\n### IF\r\n```bash\r\nif <warunek> ; then\r\n  polecenia1\r\nelse\r\n  polecenia2\r\nfi\r\n```\r\n\r\nPrzyklad:\r\n```bash\r\n#!/bin/bash\r\nif [ -e ~/.bashrc ]\r\nthen\r\n  echo \"Masz plik .bashrc\"\r\nelse\r\n  echo \"Nie masz pliku .bashrc\"\r\nfi\r\n```\r\n![image](/images/bash_operators.png)\r\n\r\n### For loop\r\n```bash\r\n#!/bin/bash\r\nfor i in 1 2 3 4 5\r\ndo\r\n  echo \"Weclome $i times\"\r\ndone\r\n```\r\n\r\n### While loop\r\n```bash\r\nwhile [ condition ]\r\ndo\r\n  command1\r\n  command2\r\n  ...\r\ndone\r\n```\r\n\r\nPrzyklad:\r\n```bash\r\n#!/bin/bash\r\nx=1\r\nwhile [ $x -le 5 ]\r\ndo\r\n  echo \"Welcome $x times\"\r\n  x=$(( $x + 1 ))\r\ndone\r\n```\r\n\r\n## Użytkownicy Grupy Hasła\r\n\r\n`useradd nazwa_uzytkownika` tworzy uzytkownika\r\n\r\n`-c` komentarz\r\n\r\n`-e` YYY-MM-DD data wygasniecia konta\r\n\r\n`-m` tworzy katalog domowy w standardowej lokalizacji\r\n\r\n`-s` zmiana powłoki \r\n\r\n<br>\r\n\r\n`userdel nazwa_uzytkownika` usuwa uzytkownika\r\n\r\n`-r` usuwa katalog domowy\r\n\r\n<br>\r\n\r\n`usermod nazwa_urzytkownika` - do modyfikacji uzytkownika\r\n\r\n`-g` grupa podstawowa\r\n\r\n`-G` usuwa wszytkie gurpy dodatkowe i ustawia podane\r\n\r\n`-aG` dodaje gurpy dodatkowe\r\n\r\n`-e` YYY-MM-DD data wygasniecia konta\r\n\r\n`-c` komentarz\r\n\r\n`-L` blokowanie konta\r\n\r\n`-U` odlokowywanie konta\r\n\r\n`-m` przenoszenie katalogu domowego\r\n\r\n`-s` zmiana powloki \r\n\r\n`-u` zmiana UID\r\n\r\n<br>\r\n\r\n`groupadd nazwa_grupy` dodawanie grupy\r\n\r\n`groupdel nazwa_grupy` usuwanie grupy\r\n\r\n`groupmod nazwa_grupy` modyfikacja grupy\r\n\r\n`passwd nazwa_uzytkownika` zmiana hasła uzytkownika\r\n\r\n`chage nazwa_uzytkownika` zmiana ustawien hasla\r\n\r\n## Zarządzanie dyskami\r\n\r\n`fdisk` do dyskow mbr\r\n\r\n`gdisk` do dyskow gpt\r\n\r\n`-l` wyswietla dyski i partycje (taki sam do `gdisk` i `fdisk`)\r\n\r\n<br>\r\n\r\n`fdisk nazwa_urzadzenia` odpala konfiguracje wskazanego uzadzenia\r\n\r\n## Tar\r\n\r\n`tar nazwa_archiwum pliki_do_archiwizacji`\r\n\r\n`-c` tworzenie archiwum\r\n\r\n`-v` wypisuje co robi\r\n\r\n`-f` sciezka do archiwum\r\n\r\n`-z` kompresowanie gzip\r\n\r\n`-j` kompresowanie bzip2\r\n\r\n`-C` zmienia katalog w którym domyslnie pracuje tar\r\n\r\n`-x` wypakowywanie archiwum \r\n\r\n`-t` wyswietla zawartosc archiwum\r\n\r\n`-r` dolaczanie do archiwum\r\n\r\n`-u` uaktualnanie archiwum\r\n\r\n## Konfiguracja sieci z pliku (netplan)\r\n\r\nSprawdzanie nazw i konfiguracji kart sieciowych \r\n\r\n`ip a`\r\n\r\nPlik konfiguracyjny\r\n\r\n/etc/netplan/\\*.yaml\r\n\r\n### Przykładowa konfiguracja\r\n\r\n![](/images/netplan_ex_1.png)\r\n![](/images/netplan_ex_2.png)\r\n![](/images/netplan_ex_3.png)\r\n\r\n**Po konfiguracji trzeba wpisac komende** `sudo netplan apply`\r\n\r\n\r\n## Net-tools\r\n\r\n`qrp` do sprawdzania adresow mac i ip\r\n\r\n`ifconfig` wyswietla konfigruacje interfejsu (między innymi ip)\r\n\r\n`ipmaddr` wyswietla mac\r\n\r\n`iptunnel` \r\n\r\n`route` pokazuje trasy routingu\r\n\r\n`nameif` \r\n\r\n`mii-tool` \r\n\r\n\r\n## Lynx \r\n\r\nDo przeglądania stron internetowych\r\n\r\n`lynx adres_strony`\r\n\r\n## Diagnostyka\r\n\r\n`lshw` wyswietla informacje o calych hardwere \r\n\r\n`lshw | more` wyswietla lshw z podzialem na czesci\r\n\r\n`uname` wyswietla informacje o systemie\r\n\r\n`cat /etc/*-release` wyswietla dokladniejsze informacje o systemie \r\n"
  },
  {
    "url": "mikrotik/Installation.md",
    "markdown": "# Instalacja mikrotik na Virtualbox/VMware\n\nJezeli chcemy porobic mikortiki w domu mozemy je wirtualizowac. Plik .ova mozemy pobrac [tutaj](https://mikrotik.com/download) - szukamy na dole `Cloud Hosted Router` i pobieramy `OVA template`. (Najlepiej najnowsza)\n\n**Do zarzadzania mikrotikiem wykorzystujemy program [WinBox](https://mt.lv/winbox64)**.\n\n## Podlaczenie kart sieciowych do maszyny wirtualnej\nZazwyczaj najlepiej jest sobie podlaczyc wszsytkie kart sieciowe (oprocz ostatniej) do **osobnych** intnetow/LAN Segmentow. Ostatnia karte sieciowa do bridge'a -  w taki sposob mozemy uzywac WinBox'a na naszym fizycznym komputerze!\n\n## Uwagi\n - Jezeli chcemy miec wiecej niz 4 interfejsy (czyli tak jak na virtualbox) najlepiej poprostu pobrac `vmware` ktory nam pozwoli dodac wiecej interfejsow. \n - Pamietaj, ze zeby dostac sie za pomoca winbox do mikrotika musisz miec karte sieciowa z `bridge` ustawiona na jakims porcie - najlepiej na ostatnia.\n - Pamietaj, ze pierwszy port (karta siecowa) jest domyslnie zazwyczaj konfigurowany jako `WAN`."
  },
  {
    "url": "mikrotik/QuickSet.md",
    "markdown": "# Quick Set w mikrotik\nTa opcja nam sie jedynie sprawdzi jezeli zadanie w arkuszu bedzie bardzo proste np. bez vlanow. \n\nPo wejsciu w zakladke `Quick Set` wyswietli nam sie takie okienko.\n\n![](/images/quickset_window.png)\n![](/images/quickset_options.png)\n\n`WISP AP` - pozwala na konfiguracji sieci wifi tylko w jeden czestotliwosci\n\n`Home AP Dual` - rozni sie tym, ze mozna wybrac dwie czestotliwosci WIFI.\n\n## Konfiguracja WIFI\n![](/images/quickset_wifi_conf.png)\n\nJakby wydaje mi sie ze tutaj nie ma czego tlumaczyc, wszystko jest raczej jasne.\n\n## Konfiguracja WAN/LAN\n### Internet (WAN)\n`Port` - port jaki chcemy miec WAN (idk czy na mikrotikach w szkole jest ta opcja)\n\n`Address Acquisition` - wybieramy czy chcemy miec statyczny adres IP czy dynamiczny (przydzielany z serwera DHCP)\n\n`IP Address` - adres ip mikrotika w sieci WAN\n\n`Netmask` - maska adresu mikrotika w sieci WAN\n\n`Gateway` - adres bramy w sieci WAN\n\n`MAC Address` - adres mac portu WAN\n\n`Firewall Router` - zaznaczone doda to kilka regul do firewalla odnosnie jego zabezpieczenia (nie potrzebne na egzaminie)\n\n### Local Network (LAN)\n`IP Address` - adres ip mikrotika w sieci LAN\n\n`Netmask` - maska adresu mikrotika w sieci LAN\n\n`Bridge All LAN Ports` - automatycznie utworzy bridge na wszystkich portach LAN\n\n`DHCP Server` - po zaznaczeniu bedziemy mogli skonfigurowac prosto server DHCP\n\n`NAT` - doda regule NAT (raczej kazdy powinien wiedziec co to NAT XD), po jej zaznaczeniu bedziemy mogli robic np **[przekierowania](/mikrotik/Redirections.md)**.\n\n## Uwagi\n - Czasem klikajac przycisk Apply niektore opcje zmieniaja sie i je trzeba na nowo ustawic"
  },
  {
    "url": "mikrotik/NAT.md",
    "markdown": "# NAT\n\n## Sposob uzywajac [Quick Set](/mikrotik/QuickSet.md)\n![](/images/nat_quickset.png)\n\n**Zakladam ze inne opcje w Quick Set sa juz skonfigurowane - inaczej nie bedzie mozna zapisac zmian!**\n\n- Wlaczamy opcje `Bridge All LAN Ports` - jezeli chcemy [konfigurowac bridge recznie](/mikrotik/Bridge.md) to zostawiamy ta opcje wylaczona (po konfiguracji bridge ona znika, wiec mozemy wogole nie miec tej opcji)\n- Wlaczamy opcje `NAT` - spowoduje ona utworzenie reguly NAT, portem WAN bedzie `ether1` no chyba ze ustawimy na gorze inny `Port`\n\n## Sposob tworzac regule NAT recznie\nJezeli nie chcemy uzywac opcji Quick Set to mozemy recznie dodac regule firewall'a dla NAT.\n\n- [Tworzymy bridge](/mikrotik/Bridge.md) jezeli nie mamy i przypisujemy do niego **TYLKO** porty LAN\n\n- Wchodzimy w zakladke `IP > Firewall` i w \"kartach\" szukamy `NAT`\n- ![](/images/nat_firewall_bm.png)\n\n- Dodajemy tutaj \"+\" nowa regule\n\n- W okienku i zakladce `General`\n  - `Chain` - srcnat\n  - `Out. Interface` - tutaj dajemy nasz port **WAN**\n  - ![](/images/nat_new_rule_general.png)\n\n- W zakladce `Action` ustawiamy `masquerade`\n- ![](/images/nat_new_rule_action.png)\n\n- Klikamy `Apply`"
  },
  {
    "url": "mikrotik/Addressess.md",
    "markdown": "# Reczne ustawianie adresow\nJak chcemy recznie ustawic adres danego portu / bridge'a / VLAN'u wchodzimy w zakladke `IP > Addressess`.\n\nZ tego miejsca mozemy dodawac nowe adresy ip - pamietaj ze dodajesz **adres mikrotika** dla danego portu.\n\n![](/images/addressess_new.png)\n\n`Address` - **adres IP mikrotika** z maska po \"/\"\n`Network` - adres sieci, po klikneicu Apply sam sie uzupelni\n`Interface` - interfejs na ktorym na byc ten adres\n\n**Jezeli w arkuszu bylo by napisane zeby nadac adres IP dla interfejsu powiazanego z VLAN X to wybieramy W `Interface` VLAN'a!**\n\n## Uwagi\n - Jezeli inaczej konfigurujesz VLAN'y (tzn, ze dajesz VLAN'y nie do bridge tylko na interfejs - ja tak nie pokazuje) to ostatnie pogrobione zdanie sie ciebie nie aplikuje."
  }
]